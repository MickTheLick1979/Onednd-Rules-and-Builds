# Lockfile: drift check â€” ensures requirements.lock matches requirements.txt
# - Runs on PRs that touch requirements.txt and on manual dispatch
# - Read-only top-level permissions
# - Uses .python-version, installs pip-tools, compiles to a temp lock, and diffs
name: Lockfile: drift check

permissions:
  contents: read

on:
  workflow_dispatch:
  pull_request:
    paths:
      - "requirements.txt"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  drift-check:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version-file: .python-version

      - name: Install pip-tools
        env:
          PIP_DISABLE_PIP_VERSION_CHECK: "1"
          PIP_NO_PYTHON_VERSION_WARNING: "1"
        run: |
          python -m pip install --upgrade pip
          pip install pip-tools

      - name: Compile temporary lockfile
        run: |
          pip-compile --generate-hashes -o requirements.temp.lock requirements.txt

      - name: Check drift vs committed requirements.lock
        run: |
          if [ ! -f requirements.lock ]; then
            echo "::error title=Missing lockfile::requirements.lock is missing in the repo. Run the 'Lockfile: refresh requirements.lock' workflow."
            exit 1
          fi
          # Show a unified diff and fail if different
          if ! diff -u requirements.lock requirements.temp.lock >/dev/null 2>&1; then
            echo "::group::Diff (requirements.lock vs requirements.temp.lock)"
            diff -u requirements.lock requirements.temp.lock || true
            echo "::endgroup::"
            echo "::error title=Lockfile drift detected::requirements.lock is out of date with requirements.txt. Please run the lockfile refresh workflow."
            exit 1
          fi
          echo "No drift detected."