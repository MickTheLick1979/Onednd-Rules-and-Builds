name: CI - Validate 2024 Data

on:
  workflow_dispatch:
  push:
    branches: ["**"]
  pull_request:

permissions:
  contents: read

concurrency:
  group: ci-validate-${{ github.ref }}
  cancel-in-progress: true

jobs:
  validate:
    name: Validate ${{ matrix.target }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target:
          - spell
          - index:spells_by_class_level

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-py311-${{ hashFiles('requirements.lock', 'requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-py311-

      - name: Install dependencies
        shell: bash
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.lock ]; then
            pip install -r requirements.lock
          else
            pip install -r requirements.txt
          fi

      - name: Validate ${{ matrix.target }}
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p ci_out
          case "${{ matrix.target }}" in
            "spell")
              python scripts/phase9/validate_spell.py \
                --schemas "schema/2024/v1" \
                --baseline "rules/2024" \
                --out "ci_out/spell"
              ;;

            "index:spells_by_class_level")
              python scripts/phase9/validate_spells_by_class_level.py \
                --schemas "schema/2024/v1" \
                --baseline "rules/2024" \
                --mappings "rules/2024/mappings" \
                --indexes "indexes/2024" \
                --out "ci_out/spells_by_class_level"
              ;;

            *)
              echo "Unknown target: '${{ matrix.target }}'"; exit 2
              ;;
          esac

      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: logs-${{ matrix.target }}
          path: |
            ci_out/**
            !**/*.tmp
